global entero account_balance:)
esclusa account_lock:)

// set a default balance before starting threads
account_balance = 200:)

// first shop
hilo {
    booleana pay:)
    pay = verdad:)

    entero x:)
    x = 10:)
    durante ¡x >= 0!{
        imprimir¡9999!:) // do not remove this print, it is preventing lock starvation by introducing delay
        obtener account_lock:)
        //imprimir¡8888!:)
        si pay {
            account_balance = account_balance + 10:)
        }sino{
            account_balance = account_balance - 10:)
        }
        pay = ~:( pay :)

        liberar account_lock:)

        x = x -1:)
    }

}

// second shop
hilo {
    booleana pay:)
    pay = mentira:)
    
    entero x:)
    x = 10:)
    durante ¡x >= 0! {
        obtener account_lock:)
        si pay {
            account_balance = account_balance + 2:)
        }sino{
            account_balance = account_balance - 2:)
        }
        pay = ~:( pay :)

        liberar account_lock:)

        x = x -1:)
    }
}


// account balance change detection
hilo {
    booleana pay:)
    pay = mentira:)

    entero x:)
    x = 10:)
    durante ¡x >= 0! {
        obtener account_lock:)
        si pay {
            account_balance = account_balance + 100:)
        }sino{
            account_balance = account_balance - 100:)
        }
        pay = ~:( pay :)

        liberar account_lock:)
        
        
        x = x -1:)

    }
}

entero old_balance:)
old_balance=0:)

entero x:)
x = 4000:)
durante x >= 0 {
    obtener account_lock:)
        si account_balance != old_balance {
            old_balance = account_balance:)
            imprimir¡account_balance!:)
        } sino {

        }
    liberar account_lock:)

    x = x -1:)
}


